
///VARIABLES / SETTINGS
	//all tuning/performance parameters in one place.
	int gauss_ksize = 15;
	int blocksize = 35;
	int size_close = 2;
	int size_open = 2;

	int size_close2 = 4;
	int size_open2 = 2;
	
...

	///------------- TESTING / DEBUG ---------------------
	std::string img_out_dir = output_dir + "/detection/";
	_mkdir(img_out_dir.c_str());
	img_out_dir = img_out_dir + img_name + "/";
	_mkdir(img_out_dir.c_str());

	FILE * file;
	std::string out_file = img_out_dir + "/num_of_lesions.txt";
	file = fopen(out_file.c_str(), "w");

	///COLOR SPACE EXPERIMENTS
	cv::Mat lab_img;
	cv::GaussianBlur(gr_img, blur_img, ksize, 0);
	cv::cvtColor(blur_img, lab_img, CV_BGR2Lab, 3);
	std::vector<cv::Mat> lab(3);
	cv::split(lab_img, lab);
	/*
	lab[0] = cv::Scalar(255);
	cv::merge(lab, ab_img);
	//cv::cvtColor(ab_img, ab_img, CV_Lab2BGR, 3);
	cv::cvtColor(ab_img, gray_img, CV_BGR2GRAY, 1);
	*/
	gray_img = lab[2];
	//cv::bitwise_not(gray_img, gray_img);
	cv::adaptiveThreshold(gray_img, thresh_img, maxValue, adaptMethod, thresholdType, blocksize, 2);
	//cv::bitwise_not(thresh_img, thresh_img);
	//cv::morphologyEx(thresh_img, thresh_img, open, elem_open);
	cv::morphologyEx(thresh_img, close_img, close, elem_close);
	cv::morphologyEx(close_img, open_img, open, elem_open);
	cv::morphologyEx(open_img, close_img, close, elem_close2);
	cv::morphologyEx(close_img, open_img, open, elem_open2);
	cv::findContours(open_img, contours, CV_RETR_TREE, CV_CHAIN_APPROX_SIMPLE, cv::Point(0, 0));
	///---------------------
	
	cv::bitwise_not(open_img, open_img);
	cv::Mat masked, color;
	cv::cvtColor(open_img, color, CV_GRAY2BGR);
	cv::bitwise_and(color, image, masked);

	
	cv::imwrite(img_out_dir + "_0_bgr.jpg", image);
	/*
	cv::imwrite(img_out_dir + "_1_gr_" + img_name + ".jpg", gr_img);
	cv::imwrite(img_out_dir + "_2_blur_" + img_name + ".jpg", blur_img);
	*/
	cv::imwrite(img_out_dir + "_3_gray_" + img_name + ".jpg", gray_img);
	cv::imwrite(img_out_dir + "_2_lab_" + img_name + ".jpg", lab_img);
	//cv::imwrite(img_out_dir + "_3_ab_" + img_name + ".jpg", ab_img);
	cv::imwrite(img_out_dir + "_4_thresh_" + img_name + ".jpg", thresh_img);
	cv::imwrite(img_out_dir + "_5_close_" + img_name + ".jpg",  close_img);
	cv::imwrite(img_out_dir + "_6_open_" + img_name + ".jpg",   open_img);
	cv::imwrite(img_out_dir + "_8_masked_" + img_name + ".jpg", masked);
	
	int num_lesions = contours.size() - 1;
	fprintf(file, "# lesions: %d \n", num_lesions);
	///--------------------------------------------------------